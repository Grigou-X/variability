#!/bin/bash

# Lire le contenu du fichier config.json
config=$(cat config.json)

# Extraire les valeurs des fonctionnalités en utilisant des expressions régulières
feature1=$(echo "$config" | grep -oP '(?<="feature1": )\w+')
feature2=$(echo "$config" | grep -oP '(?<="feature2": )\w+')
feature3=$(echo "$config" | grep -oP '(?<="feature3": )\w+')
feature4=$(echo "$config" | grep -oP '(?<="feature4": )\w+')
feature5=$(echo "$config" | grep -oP '(?<="feature5": )\w+')
feature6=$(echo "$config" | grep -oP '(?<="feature6": )\w+')
feature7=$(echo "$config" | grep -oP '(?<="feature7": )\w+')
feature8=$(echo "$config" | grep -oP '(?<="feature8": )\w+')
feature9=$(echo "$config" | grep -oP '(?<="feature9": )\w+')
feature10=$(echo "$config" | grep -oP '(?<="feature10": )\w+')
feature11=$(echo "$config" | grep -oP '(?<="feature11": )\w+')
feature12=$(echo "$config" | grep -oP '(?<="feature12": )\w+')

# Convertir les valeurs en "0" et "1"
feature1=$(if [[ $feature1 == "true" ]]; then echo "1"; else echo "0"; fi)
feature2=$(if [[ $feature2 == "true" ]]; then echo "1"; else echo "0"; fi)
feature3=$(if [[ $feature3 == "true" ]]; then echo "1"; else echo "0"; fi)
feature4=$(if [[ $feature4 == "true" ]]; then echo "1"; else echo "0"; fi)
feature5=$(if [[ $feature5 == "true" ]]; then echo "1"; else echo "0"; fi)
feature6=$(if [[ $feature6 == "true" ]]; then echo "1"; else echo "0"; fi)
feature7=$(if [[ $feature7 == "true" ]]; then echo "1"; else echo "0"; fi)
feature8=$(if [[ $feature8 == "true" ]]; then echo "1"; else echo "0"; fi)
feature9=$(if [[ $feature9 == "true" ]]; then echo "1"; else echo "0"; fi)
feature10=$(if [[ $feature10 == "true" ]]; then echo "1"; else echo "0"; fi)
feature11=$(if [[ $feature11 == "true" ]]; then echo "1"; else echo "0"; fi)
feature12=$(if [[ $feature12 == "true" ]]; then echo "1"; else echo "0"; fi)

# Créer la chaîne de caractères
result="${feature1}${feature2}${feature3}${feature4}${feature5}${feature6}${feature7}${feature8}${feature9}${feature10}${feature11}${feature12}"

# Afficher le résultat
echo "$result"


# Déclaration d'un tableau de chaînes de caractères
array=(
    "100000010100"
    "100000010110"
    "100000110100"
    "100000110110"
    "010000000000"
    "010010000000"
    "010000000010"
    "010010000010"
    "010100000000"
    "010110000000"
    "010100000010"
    "010110000010"
    "011000000000"
    "011100000000"
    "011010000000"
    "011110000000"
    "011000000010"
    "011010000010"
    "011100000010"
    "011110000010"
    "010000000100"
    "010010000100"
    "011000000100"
    "011010000100"
    "010000000110"
    "010010000110"
    "011000000110"
    "011010000110"
    "010100000100"
    "011100000100"
    "010110000100"
    "011110000100"
    "010100000110"
    "010110000110"
    "011100000110"
    "011110000110"
    "010000001000"
    "010000001010"
    "010010001000"
    "010010001010"
    "011000001000"
    "011000001010"
    "011010001000"
    "011010001010"
    "010100001000"
    "011100001000"
    "010100001010"
    "011100001010"
    "010110001000"
    "011110001000"
    "010110001010"
    "011110001010"
    "100000011000"
    "100000111000"
    "100000011010"
    "100000111010"
    "010000001100"
    "011000001100"
    "010010001100"
    "011010001100"
    "010000001110"
    "010010001110"
    "011000001110"
    "011010001110"
    "100000011100"
    "100000011110"
    "010100001100"
    "011100001100"
    "010110001100"
    "011110001100"
    "010100001110"
    "011100001110"
    "010110001110"
    "011110001110"
    "100000111100"
    "100000111110"
    "010011000000"
    "010011000010"
    "010111000000"
    "010111000010"
    "010011001000"
    "010011001010"
    "010111001000"
    "010111001010"
    "011011000000"
    "011011001000"
    "011011000010"
    "011011001010"
    "011111000000"
    "011111001000"
    "011111000010"
    "011111001010"
    "010011000100"
    "011011000100"
    "010011001100"
    "011011001100"
    "010111000100"
    "011111000100"
    "010111001100"
    "011111001100"
    "010011000110"
    "010111000110"
    "010011001110"
    "010111001110"
    "011011000110"
    "011111000110"
    "011011001110"
    "011111001110"
    "010000000001"
    "010000000011"
    "011000000001"
    "011000000011"
    "010000001001"
    "010000001011"
    "011000001001"
    "011000001011"
    "010100000001"
    "010100001001"
    "011100000001"
    "011100001001"
    "010100000011"
    "010100001011"
    "011100000011"
    "011100001011"
    "100000011001"
    "100000111001"
    "100000011011"
    "100000111011"
    "010000000101"
    "011000000101"
    "010000000111"
    "011000000111"
    "100000010101"
    "100000110101"
    "100000010111"
    "100000110111"
    "100000011101"
    "100000111101"
    "100000011111"
    "100000111111"
    "010000001101"
    "010000001111"
    "011000001101"
    "011000001111"
    "010100000101"
    "010100001101"
    "010100000111"
    "010100001111"
    "011100000101"
    "011100000111"
    "011100001101"
    "011100001111"
    "010010000001"
    "010010000101"
    "010010001001"
    "010010001101"
    "010010000011"
    "010010001011"
    "010010000111"
    "010010001111"
    "010011000001"
    "010011000011"
    "010011000101"
    "010011000111"
    "010011001001"
    "010011001101"
    "010011001011"
    "010011001111"
    "011010000001"
    "011010001001"
    "011010000011"
    "011010001011"
    "011010000101"
    "011010000111"
    "011010001101"
    "011010001111"
    "011011000001"
    "011011000011"
    "011011000101"
    "011011000111"
    "011011001001"
    "011011001101"
    "011011001011"
    "011011001111"
    "010110000001"
    "010110000101"
    "010110001001"
    "010110001101"
    "010110000011"
    "010110001011"
    "010110000111"
    "010110001111"
    "010111000001"
    "010111000101"
    "010111001001"
    "010111001101"
    "010111000011"
    "010111001011"
    "010111000111"
    "010111001111"
    "011110000001"
    "011111000001"
    "011110001001"
    "011111001001"
    "011110000011"
    "011110001011"
    "011111000011"
    "011111001011"
    "011110000101"
    "011110001101"
    "011111000101"
    "011111001101"
    "011110000111"
    "011110001111"
    "011111000111"
    "011111001111"
)



# Chaîne à rechercher
search_string="$result"

# Parcourir les éléments du tableau et rechercher la chaîne
found=false
for element in "${array[@]}"
do
    if [ "$element" = "$search_string" ]; then
        found=true
        break
    fi
done

# Vérifier si la chaîne a été trouvée ou non
if [ "$found" = true ]; then
    echo "La chaîne \"$search_string\" a été trouvée dans le tableau."
    # Extraire les clés avec des valeurs "false" du fichier JSON
    false_keys=$(echo "$config" | grep -o '"[^"]*":\s*false' | sed 's/"//g' | cut -d: -f1)

    # Parcourir les clés extraites
    for key in $false_keys; do
    # Supprimer le dossier correspondant
    rm -rf "$key"
    done

else
    echo "La chaîne \"$search_string\" n'a pas été trouvée dans le tableau."
fi